{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","onClick","toast","duration","action","placeholder","arial-label","toastOptions","style","background","color","ReactDOM","render","document","getElementById"],"mappings":"yOAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,Y,uBCLnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,8DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,yBAAKc,UAAU,0CACX,yBAAKA,UAAU,kBACX,yBAAKC,IAAMf,EAAMgB,IAAMN,OCL1BO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAKGqB,EDrB0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAqDhB,EAArD,KAEEoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAGPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACLD,U,OEdpBkB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,kBAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,yCAAI,yBAAK+B,UAAU,QACjB,wBAAIA,UAAU,SAAd,iBAGE,yBAAKA,UAAU,uEACX,yBAAKA,UAAU,aAEf,4BAAQA,UAAU,6BAA6Bc,QAAU,kBAAMC,YAAM,sLAAuL,CACxPC,SAAU,SADd,WAOG,yBAAKhB,UAAU,4CACN,0BAAMiB,OAAO,GAAGjB,UAAU,6BACtB,kBAAC,EAAD,CAAa/B,cAAgBA,EAAgB+B,UAAU,wBAAwBkB,YAAY,SAASC,cAAY,eAOpI,6BAEA,yBAAKnB,UAAU,wDACX,wBAAIA,UAAU,IAENa,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAWA,OAIvB,kBAAC,IAAD,CAASoC,aACL,CAACC,MAAO,CACJC,WAAY,UACZC,MAAO,e,MC1CnCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.2a3c1f17.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState(''); // ''\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [ inputValue, ...cats, ] );\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n                \n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\n\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=8&api_key=A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n\n}","import React from 'react'\n\n\n\nexport const GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <div className='d-inline-flex '>\n                <img src={ url } alt={ title } />\n            </div>\n            {/* <div>\n                <p> { title } </p>\n            </div> */}\n        </div>\n    )\n}\n// contenedor d-flex justify-content-between\n\n// card animate__animated animate__fadeIn","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n\n\n\n    return state; // { data:[], loading: true };\n\n\n}\n\n\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\nimport { Toaster, toast } from 'react-hot-toast';\n\n\nexport const GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState(['tom and jerry']);\n\n    return (\n        <>  <div className=\"hero\">\n\t\t        <h2 className=\"texto\">GifExpertApp</h2>\n\t        </div>  \n            \n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark  justify-content-center\">\n                <div className=\"container\">\n                \n                <button className=\"btn btn-light my-s my-sm-0\" onClick={ () => toast('Esta es una App con la finalidad de buscar por la barra de busqueda, cualquier tipo de GIF que se encuentre en la base de datos de los servidores de GIPHY.com  ~EJM Tom-and-jerry~', {\n                    duration: 12000,\n                })}>\n                    Que es?\n                </button>\n                   \n                    \n                   <div className='contenedor d-flex justify-content-center'>\n                            <form action=\"\" className=\"form-inline my-2 my-lg-0 \">\n                                <AddCategory setCategories={ setCategories } className=\"form-control mr-sm-2 \" placeholder=\"Buscar\" arial-label=\"Buscar\"/>\n                                \n                            </form>\n                        </div>\n                </div>\n            </nav>\n           \n            <hr />\n   \n            <div className='container align-content-around alert alert-dark mt-5'>\n                <ol className=''>\n                    {\n                        categories.map( category  => (\n                            <GifGrid \n                                key={ category }\n                                category={ category }\n                            />\n                        ))\n                    }\n                    <Toaster toastOptions={\n                        {style: {\n                            background: '#363636',\n                            color: '#fff',\n                          },}\n                    }/>\n                </ol>\n\n            </div>\n\n\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}